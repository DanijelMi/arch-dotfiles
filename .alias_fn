#!/usr/bin/env bash
# Contextual file extractor

#--------| Aliases |-------------
alias ll='ls -l --color=auto --group-directories-first'
alias ls='ls -hN --color=auto --group-directories-first'
alias grep="grep --color=auto" # Color grep - highlight desired sequence.
alias ccat="highlight --out-format=ansi" # Color cat - print file with syntax highlighting.
alias crp="rsync --recursive --progress --size-only --inplace --verbose" # A better cp
alias notes="$EDITOR $HOME/notes" # A better cp
alias pacinstall="pacman -Slq | fzf -m --preview 'pacman -Si {1}' | xargs -r sudo pacman -S --noconfirm"
alias aurinstall="yay -Slq | fzf -m --preview 'yay -Si {1}'| xargs -ro yay -S"
alias ab="mpv --save-position-on-quit"
command -v nvim >/dev/null && alias vim="nvim" vimdiff="nvim -d" # Use neovim for vim if present.


#--------| Functions |-----------
ex (){
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Simple manpage
h (){ curl cheat.sh/$1 ; }

# Public IP
publicip (){ curl ipinfo.io/"$@" ; }

# CLI pastebin
upb (){
curl -fsSL -X POST \
--url https://paste.ubuntu.com \
--output /dev/null \
--write-out "%{url_effective}\n" \
--data-urlencode "content@${PASTEBIN_CONTENT:-/dev/stdin}" \
--data "poster=${PASTEBIN_POSTER:-`whoami`@`hostname`}" \
--data "syntax=${PASTEBIN_SYNTAX:-text}" \
--data "expiration=${PASTEBIN_EXPIRATION:-day}" \
< "$@"
}

# Fuzzy finder ripgrep
ffc (){ rg . | fzf | sed 's/:.*$//g' ;}

# Run command upon target file attribute change
# Usage: iwatch DIR/FILE COMMAND : iwatch Downloads notify-send "New item downloaded"
iwatch (){ 
  FILE=$1 
  shift 1 # Shifts all args to the left, making "$@" function as "all other args"
  COMMAND="$@"
  while inotifywait --quiet --event attrib $FILE ; do eval $COMMAND; done;
}

# Common settings
# Import colorscheme from 'wal' asynchronously
# &   # Run the process in the background.
# ( ) # Hide shell job control messages.
# (cat ~/.cache/wal/sequences &)